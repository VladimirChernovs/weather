buildscript {
    ext {
        kotlinVersion = "1.3.11"
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id "org.jetbrains.dokka" version "0.9.17"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-jpa'

group = 'com.chernov'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

repositories {
    mavenCentral()
}

allOpen {
    annotation('javax.persistence.Entity')
    annotation('javax.persistence.Embeddable')
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-jetty')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.jetbrains.kotlin:kotlin-reflect')

    implementation 'io.github.cdimascio:java-dotenv:3.1.3'
    implementation 'io.github.cdimascio:openapi-spring-webflux-validator:1.0.1'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.json:json:20180813'

    // Cache
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("com.github.ben-manes.caffeine:caffeine")

    // Database
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')

    //Jackson Kotlin
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')

    //Junit 5
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
